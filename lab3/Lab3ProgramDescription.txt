Lab 3 Program Description

Kavin Mohan - 20110565
Lawrence Luo - 20116509

Objective: Write a c program that uses a shared memory segment which sends information between processes. 
In this case, the information is text or characters.The synchronization algorithim to be used is a mutual exlcusion test
and set algorithim.The producer sends information to the shared memory space from a buffer one character at a time. 
Similarly, the consumer transfers information one character at time fromthe shared memory space to output it. 

common.c:
	This file defines two functions to set a mutex and releasing the mutex whenever a process
	uses a shared memory space. It also defines a function that implements test and set. (This was given in the lab instructions).
	getMutex:
		Uses the test and set function with lock passed to it to intialize the mutex in while loop.
	releaseMutex:
		Sets the lock to false to release the mutex.
producer.c:
	Intitalizes shared memory and variables to check buffer. The number of producers is incremented and it is 
	protected between a getMutex and a releaseMutex as it is a shared variable. The producer then uses a loop
	that reads each character using getchar until it reaches EOF. An inner loop is used to check if there is room 
	in the queue with getMutex being called for access. If there is room in the queue, it adds the character.
	It then releases the mutex.

consumer.c: 
	The consumer first intializes variables for checking the mutex status. A nested while loop is used
	to iterate through all characters in the buffer while checking if the number of producers is greater
	than 0. It exits when there are no more producers and then releases the mutex.
	
	